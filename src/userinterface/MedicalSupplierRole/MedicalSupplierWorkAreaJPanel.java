/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.MedicalSupplierRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organizations.MedicalSupplierOrganization;
import Business.Organizations.Organization;
import Business.UserAccount.UserAccountMedicalSupplier.UserAccountMedicalSupplier;
import Business.RequestQueue.NewRequestToMedicalSupplier;
import Business.RequestQueue.WorkRequestDoctorMedicalSupplier;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.awt.Graphics;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author raunak
 */
public class MedicalSupplierWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccountMedicalSupplier userAccount;
    private MedicalSupplierOrganization medicalSupplierOrganization;
    private Enterprise enterprise;

    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public MedicalSupplierWorkAreaJPanel(JPanel userProcessContainer, UserAccountMedicalSupplier account, Organization organization, EcoSystem business) {
        try {
            initComponents();

            this.userProcessContainer = userProcessContainer;
            this.userAccount = account;
            this.business = business;
            this.medicalSupplierOrganization = (MedicalSupplierOrganization) organization;
            this.enterprise = enterprise;

            populateTable();
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Null Pointer Exception Occurred!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Some Exception Occurred!");
        }
    }

    public void populateTable() {
        try {
            DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

            model.setRowCount(0);

            for (WorkRequestDoctorMedicalSupplier request : medicalSupplierOrganization.getRequestQueueDoctorMedicalSupplier().getWorkRequestDoctorMedicalSupplier()) {
                Object[] row = new Object[4];
                row[0] = request;
                row[1] = request.getSender().getSoldier().getName();
                row[2] = request.getReceiver() == null ? null : request.getReceiver().getMedicalSupplierEmployee().getName();
                row[3] = request.getStatus();

                model.addRow(row);
            }
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Null Pointer Exception Occurred!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Some Exception Occurred!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel()
        {
            public void paintComponent(Graphics g)
            {
                ImageIcon img=new ImageIcon("medicalsupply.jpg");
                Image i=img.getImage();

                g.drawImage(i, 0, 0, this.getSize().width, this.getSize().height,this);
            }

        }
        ;
        jPanel2 = new javax.swing.JPanel();
        assignJButton = new javax.swing.JButton();
        processJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        refreshJButton = new javax.swing.JButton();
        addNewMedicalItemButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255,150));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        assignJButton.setBackground(new java.awt.Color(51, 153, 255));
        assignJButton.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        assignJButton.setForeground(java.awt.Color.white);
        assignJButton.setText("ASSIGN TO ME");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        jPanel2.add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, 230, 30));

        processJButton.setBackground(new java.awt.Color(51, 153, 255));
        processJButton.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        processJButton.setForeground(java.awt.Color.white);
        processJButton.setText("PROCESS");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });
        jPanel2.add(processJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 400, 200, 30));

        workRequestJTable.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        workRequestJTable.setForeground(new java.awt.Color(51, 153, 255));
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        workRequestJTable.setRowHeight(36);
        jScrollPane1.setViewportView(workRequestJTable);
        if (workRequestJTable.getColumnModel().getColumnCount() > 0) {
            workRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 630, 180));

        refreshJButton.setBackground(new java.awt.Color(51, 153, 255));
        refreshJButton.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        refreshJButton.setForeground(java.awt.Color.white);
        refreshJButton.setText("REFRESH");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        jPanel2.add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, -1, -1));

        addNewMedicalItemButton.setBackground(new java.awt.Color(51, 153, 255));
        addNewMedicalItemButton.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        addNewMedicalItemButton.setForeground(java.awt.Color.white);
        addNewMedicalItemButton.setText("MANAGE MEDICAL SUPPLY");
        addNewMedicalItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewMedicalItemButtonActionPerformed(evt);
            }
        });
        jPanel2.add(addNewMedicalItemButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 350, -1));
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 362, 600, 20));
        jPanel2.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 660, 20));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 220, 680, 480));

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed
        try {
            int selectedRow = workRequestJTable.getSelectedRow();

            if (selectedRow < 0) {
                JOptionPane.showMessageDialog(null, "Please select a row!");
                return;
            }

            WorkRequestDoctorMedicalSupplier request = (WorkRequestDoctorMedicalSupplier) workRequestJTable.getValueAt(selectedRow, 0);
            request.setReceiver(userAccount);
            request.setStatus("Pending");
            populateTable();
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Null Pointer Exception Occurred!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Some Exception Occurred!");
        }
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed
        try {
            int selectedRow = workRequestJTable.getSelectedRow();

            if (selectedRow < 0) {
                JOptionPane.showMessageDialog(null, "Please select a row!");
                return;
            }

            NewRequestToMedicalSupplier request = (NewRequestToMedicalSupplier) workRequestJTable.getValueAt(selectedRow, 0);

            request.setStatus("Processing");

            ProcessDoctorWorkRequestJPanel processWorkRequestJPanel = new ProcessDoctorWorkRequestJPanel(userProcessContainer, request);
            userProcessContainer.add("processWorkRequestJPanel", processWorkRequestJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Null Pointer Exception Occurred!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Some Exception Occurred!");
        }
    }//GEN-LAST:event_processJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void addNewMedicalItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewMedicalItemButtonActionPerformed
        try {
            ManageMedicalSuppliesJPanel manageMedicalSuppliesJPanel = new ManageMedicalSuppliesJPanel(userProcessContainer, userAccount, medicalSupplierOrganization);
            userProcessContainer.add("manageMedicalSuppliesJPanel", manageMedicalSuppliesJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Null Pointer Exception Occurred!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Some Exception Occurred!");
        }
    }//GEN-LAST:event_addNewMedicalItemButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewMedicalItemButton;
    private javax.swing.JButton assignJButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton processJButton;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
