/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.NurseRole;

import Business.Enterprise.Enterprise;
import Business.Notifications.Send;
import Business.Organizations.MedicalCampOrganization;
import Business.Organizations.Organization;
import Business.RequestQueue.NewEmergencyRequestToDoctor;
import Business.Role.DoctorRole;
import Business.UserAccount.UserAccountSoldier.UserAccountSoldier;
import Business.Soldiers.Soldiers;
import Business.UserAccount.UserAccount;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Desktop;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.awt.Graphics;
import java.awt.Image;
import javax.swing.ImageIcon;

/**
 *
 * @author raunak
 */
public class RequestToDoctorJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccountSoldier userAccount;
    private static int pdfCount = 0;
    Send send = new Send();

    /**
     * Creates new form RequestLabTestJPanel
     */
    public RequestToDoctorJPanel(JPanel userProcessContainer, UserAccountSoldier account, Enterprise enterprise) {
        try {
            initComponents();
            this.userProcessContainer = userProcessContainer;
            this.enterprise = enterprise;
            this.userAccount = account;
            valueLabel.setText(enterprise.getName());
            populateCategoryComboBox();
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Null Pointer Exception Occurred!");
        } catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(null, "Array Out of Bound Exception Occurred!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Some Exception Occurred!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel(){
            public void paintComponent(Graphics g)
            {
                ImageIcon img=new ImageIcon("nurse.jpg");
                Image i=img.getImage();

                g.drawImage(i, 0, 0, this.getSize().width, this.getSize().height,this);
            }

        }
        ;
        jPanel2 = new javax.swing.JPanel();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        requestComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        requestTestJButton = new javax.swing.JButton();
        saveAsPDFButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255,150));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("Emergency Request ");
        jPanel2.add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 220, 30));

        valueLabel.setText("<value>");
        jPanel2.add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, 130, -1));

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        jPanel2.add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 430, -1, -1));

        jLabel2.setText("Request Category");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, -1));

        requestComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel2.add(requestComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 260, 290, -1));

        jLabel1.setText("Description");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 90, -1));

        descriptionTextArea.setColumns(20);
        descriptionTextArea.setRows(5);
        jScrollPane1.setViewportView(descriptionTextArea);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 300, -1, -1));

        requestTestJButton.setText("Send Request");
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });
        jPanel2.add(requestTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 430, -1, -1));

        saveAsPDFButton.setText("Save As PDF");
        saveAsPDFButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsPDFButtonActionPerformed(evt);
            }
        });
        jPanel2.add(saveAsPDFButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 430, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, 490, 570));

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed
        try {
            String message = descriptionTextArea.getText();
            String requestCat = requestComboBox.getSelectedItem().toString();
            NewEmergencyRequestToDoctor request = new NewEmergencyRequestToDoctor();
            request.setMessage(message);
            request.setRequestCategory(requestCat);
            request.setSender(userAccount);
            request.setStatus("Sent");

            ArrayList<Organization> orgList = new ArrayList<Organization>();
            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (organization instanceof MedicalCampOrganization) {
                    orgList.add(organization);
                    break;
                }
            }
            for (Organization org : orgList) {
                if (org != null) {
                    org.getRequestQueueNurseDoctor().getWorkRequestNurseDoctorList().add(request);
                }
            }

            userAccount.getRequestQueueNurseDoctor().getWorkRequestNurseDoctorList().add(request);
            String recepient = "";
            String phone = "";
            for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
                for (UserAccount ua : o.getSoldierUADirectory().getUserAccountList()) {

                    if (ua.getEmail() != null && ua.getRole() instanceof DoctorRole) {
                        recepient = recepient + ua.getEmail() + ",";
                    }
                    if (ua.getPhoneNumber() != null && ua.getRole() instanceof DoctorRole) {
                        phone = phone + "+1" + ua.getPhoneNumber() + ",";
                    }
                }
            }if (!recepient.isEmpty()) {
                send.mail(recepient, requestCat, message);
            }
            send.sms(message, "MCMS", phone);
            descriptionTextArea.setText("");
            JOptionPane.showMessageDialog(null, "Request sent succesfully to Doctors");
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Null Pointer Exception Occurred!");
        } catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(null, "Array Out of Bound Exception Occurred!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Some Exception Occurred!");
        }
    }//GEN-LAST:event_requestTestJButtonActionPerformed

    private void populateCategoryComboBox() {
        try {
            requestComboBox.removeAllItems();
            requestComboBox.addItem(Soldiers.RequestCategory.DoctorsNeeded.getValue());
//            requestComboBox.addItem(Soldiers.RequestCategory.MedicalSupplies.getValue());
            requestComboBox.addItem(Soldiers.RequestCategory.Beds.getValue());
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Null Pointer Exception Occurred!");
        } catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(null, "Array Out of Bound Exception Occurred!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Some Exception Occurred!");
        }
    }
    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        try {
            userProcessContainer.remove(this);
            Component[] componentArray = userProcessContainer.getComponents();
            Component component = componentArray[componentArray.length - 1];
            NurseWorkAreaJPanel dwjp = (NurseWorkAreaJPanel) component;
            dwjp.populateRequestToDoctorTable();
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.previous(userProcessContainer);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Null Pointer Exception Occurred!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Some Exception Occurred!");
        }
    }//GEN-LAST:event_backJButtonActionPerformed

    private void saveAsPDFButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsPDFButtonActionPerformed
        Document newDocument = new Document();
        String myFilepath = userAccount.getUsername() + "_RequestToDoctor_" + pdfCount + ".pdf";
        try {
            PdfWriter.getInstance(newDocument, new FileOutputStream(userAccount.getUsername() + "_RequestToDoctor_" + pdfCount + ".pdf"));
        } catch (DocumentException | FileNotFoundException ex) {
            Logger.getLogger(RequestToCampCommandantJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            newDocument.open();
            newDocument.add(new Paragraph("Hi,"));
            newDocument.add(new Paragraph(userAccount.getUsername().toUpperCase()));
            newDocument.add(new Paragraph(" "));
            newDocument.add(new Paragraph("Your Request has been send to Doctor."));
            newDocument.add(new Paragraph(" "));
            newDocument.add(new Paragraph("Request Category - " + requestComboBox.getSelectedItem()));
            newDocument.add(new Paragraph("Request Description - " + descriptionTextArea.getText()));
            newDocument.close();
            JOptionPane.showMessageDialog(null, "Report Generated where the project is placed!");
            if (Desktop.isDesktopSupported()) {
                try {
                    File myFile = new File(myFilepath);
                    Desktop.getDesktop().open(myFile);
                } catch (IOException ex) {

                }
            }

        } catch (DocumentException ex) {
            Logger.getLogger(RequestToCampCommandantJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        pdfCount += 1;
    }//GEN-LAST:event_saveAsPDFButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JTextArea descriptionTextArea;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> requestComboBox;
    private javax.swing.JButton requestTestJButton;
    private javax.swing.JButton saveAsPDFButton;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
